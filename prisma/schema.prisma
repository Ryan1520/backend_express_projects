// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output = "../prisma/generated"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  email String @unique
  username String @unique
  password String
  avatar String?
  createdAt DateTime @default(now())
  posts Post[]
  savedPosts SavedPosts[]
  chat Chat[]
}

model Post {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  price Int
  images String[]
  address String
  city String
  bedroom Int
  bathroom Int
  latitude String
  lontitude String
  type Type
  property Property
  createdAt DateTime @default(now())
  user User
  postDetail PostDetail?
  savedPosts SavedPosts[]
}

enum Type {
  buy
  rent
}

enum Property {
  house
  apartment
  condo
  land
}

model PostDetail {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  desc String
  utilities String?
  pet String?
  income String?
  size String?
  school Int?
  bus Int?
  restaurant Int?
}

model SavedPosts {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  user User
  post Post
}

model Chat {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  users User[]
  createdAt DateTime @default(now())
  messages Message[]
  lastMessage String?
}

model Message {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  text String
  userId String
  chat Chat
  createdAt DateTime @default(now())
}