// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              String           @id @default(uuid())
  age             Int              @default(0)
  email           String           @unique
  password        String
  role            Role             @default(USER)
  name            String
  refreshToken    Json?
  isAdmin         Boolean?         @default(false)
  prefereneces    Json?
  writtenPosts    Post[]           @relation("WrittenPosts")
  favoritePosts   Post[]           @relation("FavoritePosts")
  userPreferences UserPreferences?

  @@unique([email, name])
  @@index([name])
}

model UserPreferences {
  id           String  @id @default(uuid())
  emailUpdates Boolean
  user         User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String  @unique
}

model Post {
  id            String     @id @default(uuid())
  averageRating Float?
  title         String
  content       String
  published     Boolean    @default(false)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  author        User       @relation("WrittenPosts", fields: [authorId], references: [id])
  authorId      String
  favoritedBy   User?      @relation("FavoritePosts", fields: [favoritedById], references: [id])
  favoritedById String?
  Category      Category[]
}

model Category {
  id    String @id @default(uuid())
  name  String @unique
  posts Post[]
}

enum Role {
  USER
  EDITOR
  ADMIN
}
